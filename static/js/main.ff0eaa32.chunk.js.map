{"version":3,"sources":["components/header.jsx","components/addItem.jsx","components/item.jsx","components/items.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","href","AddItem","state","id","title","price","quantity","onSubmit","e","preventDefault","document","querySelectorAll","forEach","input","value","classList","add","props","addItem","uuid","Math","round","setState","onChange","target","name","remove","this","type","placeholder","min","className","Component","Item","item","onClick","onDelete","Items","Fragment","items","map","key","itemsPricesSum","App","handleDelete","itemId","filter","i","countPrices","newItem","parseFloat","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff0eaa32.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Shopping list</h1>\r\n      <ul>\r\n        <li>\r\n          <a href=\"#\">Contact us</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">About</a>\r\n        </li>\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass AddItem extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    price: \"\",\r\n    quantity: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll(\"input\").forEach((input) => {\r\n      input = !input.value ? input.classList.add(\"error\") : \"\";\r\n    });\r\n\r\n    if (!this.state.title || !this.state.price || !this.state.quantity) {\r\n    } else {\r\n      this.props.addItem(\r\n        uuid(),\r\n        this.state.title,\r\n        Math.round(this.state.price * 100) / 100,\r\n        Math.round(this.state.quantity)\r\n      );\r\n      this.setState({ id: \"\", title: \"\", price: \"\", quantity: \"\" });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    document.querySelectorAll(\"input\").forEach((input) => {\r\n      input.classList.remove(\"error\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"Title...\"\r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          name=\"price\"\r\n          id=\"price\"\r\n          placeholder=\"Price...\"\r\n          value={this.state.price}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          name=\"quantity\"\r\n          id=\"quantity\"\r\n          placeholder=\"Quantity...\"\r\n          value={this.state.quantity}\r\n          onChange={this.onChange}\r\n        />\r\n        <input className=\"addItemBtn\" type=\"submit\" value=\"Add Item\"></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddItem.propTypes = {\r\n  addItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>{this.props.item.title}</td>\r\n        <td>{this.props.item.price}</td>\r\n        <td>{this.props.item.quantity}</td>\r\n        <td>\r\n          <button\r\n            className=\"deleteBtn\"\r\n            onClick={() => this.props.onDelete(this.props.item.id)}\r\n          >\r\n            x\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"../components/item.jsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass Items extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Item</th>\r\n              <th>Price</th>\r\n              <th>Quantity</th>\r\n              <th className=\"BtnColumn\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.items.map((item) => (\r\n              <Item key={uuid()} item={item} onDelete={this.props.onDelete} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <p className=\"total\">In Total : {this.props.itemsPricesSum} $ </p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nItems.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Items;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport AddItem from \"./components/addItem\";\nimport Items from \"./components/items\";\nimport { v4 as uuid } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    items: [\n      {\n        id: \"1\",\n        title: \"Apple\",\n        price: \"1.00\",\n        quantity: \"10\",\n      },\n      {\n        id: \"2\",\n        title: \"Banana\",\n        price: \"2.50\",\n        quantity: \"4\",\n      },\n      {\n        id: \"3\",\n        title: \"Orange\",\n        price: \"2.00\",\n        quantity: \"5\",\n      },\n      {\n        id: \"4\",\n        title: \"Peach\",\n        price: \"3.50\",\n        quantity: \"12\",\n      },\n    ],\n    itemsPricesSum: \"72.00\",\n  };\n\n  handleDelete = (itemId) => {\n    const items = this.state.items.filter((i) => i.id !== itemId);\n    this.setState({ items });\n    this.countPrices(items);\n  };\n\n  addItem = (id, title, price, quantity) => {\n    const newItem = {\n      id,\n      title,\n      price,\n      quantity,\n    };\n    const items = [...this.state.items, newItem];\n    this.setState({ items });\n    this.countPrices(items);\n  };\n\n  countPrices = (items) => {\n    let itemsPricesSum = 0;\n    items.forEach((item) => {\n      itemsPricesSum += parseFloat(item.price) * parseFloat(item.quantity);\n      itemsPricesSum = Math.round(itemsPricesSum * 100) / 100;\n    });\n    this.setState({ itemsPricesSum });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <AddItem key={uuid()} addItem={this.addItem} />\n        <Items\n          items={this.state.items}\n          onDelete={this.handleDelete}\n          itemsPricesSum={this.state.itemsPricesSum}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}